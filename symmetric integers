class Solution {
public:
    int countSymmetricIntegers(int low, int high) {
        int count = 0;
        for (int i = low; i <= high; ++i) {
            if (isSymmetric(i)) {
                count++;
            }
        }
        return count;
    }

private:
    bool isSymmetric(int x) {
        
        std::string s = std::to_string(x);
        int n = s.size();
        
     
        if (n % 2 == 1) {
            return false;
        }
        
        int sumFirstHalf = 0;
        int sumSecondHalf = 0;
        for (int i = 0; i < n / 2; ++i) {
            sumFirstHalf += s[i] - '0';
            sumSecondHalf += s[n - i - 1] - '0';
        }
        
       
        return sumFirstHalf == sumSecondHalf;
    }
};
