class Solution {
public:
    int longestEqualSubarray(vector<int>& nums, int k) {
        int maxLength = 0;
        int maxCount = 0;
        std::unordered_map<int, int> freqMap;
        int left = 0;
        
        for (int right = 0; right < nums.size(); ++right) {
            freqMap[nums[right]]++;
            maxCount = std::max(maxCount, freqMap[nums[right]]);
            int deletions = (right - left + 1) - maxCount;
            
            if (deletions > k) {
                freqMap[nums[left]]--;
                left++;
            }
            
            maxLength = std::max(maxLength, right - left + 1);
        }
        
        return maxLength/2;
    }
};
